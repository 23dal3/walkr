// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcppeigen_hello_world
Eigen::MatrixXd rcppeigen_hello_world();
RcppExport SEXP walkr_rcppeigen_hello_world() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(rcppeigen_hello_world());
    return __result;
END_RCPP
}
// rcppeigen_outerproduct
Eigen::MatrixXd rcppeigen_outerproduct(const Eigen::VectorXd& x);
RcppExport SEXP walkr_rcppeigen_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP);
    __result = Rcpp::wrap(rcppeigen_outerproduct(x));
    return __result;
END_RCPP
}
// rcppeigen_innerproduct
double rcppeigen_innerproduct(const Eigen::VectorXd& x);
RcppExport SEXP walkr_rcppeigen_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP);
    __result = Rcpp::wrap(rcppeigen_innerproduct(x));
    return __result;
END_RCPP
}
// rcppeigen_bothproducts
Rcpp::List rcppeigen_bothproducts(const Eigen::VectorXd& x);
RcppExport SEXP walkr_rcppeigen_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type x(xSEXP);
    __result = Rcpp::wrap(rcppeigen_bothproducts(x));
    return __result;
END_RCPP
}
// rcppeigen_ftrans
Eigen::MatrixXd rcppeigen_ftrans(const Eigen::MatrixXd& A);
RcppExport SEXP walkr_rcppeigen_ftrans(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type A(ASEXP);
    __result = Rcpp::wrap(rcppeigen_ftrans(A));
    return __result;
END_RCPP
}
// rcppeigen_fsolve
Eigen::MatrixXd rcppeigen_fsolve(const Eigen::Map<Eigen::MatrixXd>& A);
RcppExport SEXP walkr_rcppeigen_fsolve(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    __result = Rcpp::wrap(rcppeigen_fsolve(A));
    return __result;
END_RCPP
}
// rcppeigen_fdet
double rcppeigen_fdet(const Eigen::Map<Eigen::MatrixXd>& A);
RcppExport SEXP walkr_rcppeigen_fdet(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    __result = Rcpp::wrap(rcppeigen_fdet(A));
    return __result;
END_RCPP
}
